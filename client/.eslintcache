[{"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\App.tsx":"1","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\AppRouter.tsx":"2","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\NavBar.tsx":"3","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\http\\userAPI.ts":"4","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\routes.ts":"5","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\http\\index.ts":"6","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\utils\\consts.ts":"7","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\pages\\DevicePage.tsx":"8","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\pages\\Auth.tsx":"9","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\pages\\Shop.tsx":"10","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\pages\\Admin.tsx":"11","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\Pages.tsx":"12","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\BrandBar.tsx":"13","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\DeviceList.tsx":"14","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\http\\deviceAPI.ts":"15","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\TypeBar.tsx":"16","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\modals\\CreateType.tsx":"17","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\modals\\CreateBrand.tsx":"18","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\modals\\CreateDevice.tsx":"19","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\DeviceItem.tsx":"20","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\index.tsx":"21","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\store\\store.ts":"22","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\hooks\\redux.ts":"23","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\store\\reducers\\device\\deviceSlice.ts":"24","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\store\\reducers\\user\\userSlice.ts":"25","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\store\\reducers\\user\\userActions.ts":"26","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\store\\reducers\\device\\deviceActions.ts":"27","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\pages\\Cart.tsx":"28","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\CartItem.tsx":"29"},{"size":785,"mtime":1688327284551,"results":"30","hashOfConfig":"31"},{"size":761,"mtime":1688313365245,"results":"32","hashOfConfig":"31"},{"size":2829,"mtime":1688324603474,"results":"33","hashOfConfig":"31"},{"size":746,"mtime":1688312418213,"results":"34","hashOfConfig":"31"},{"size":804,"mtime":1688322211977,"results":"35","hashOfConfig":"31"},{"size":428,"mtime":1688297969657,"results":"36","hashOfConfig":"31"},{"size":234,"mtime":1688297969663,"results":"37","hashOfConfig":"31"},{"size":5479,"mtime":1688390613538,"results":"38","hashOfConfig":"31"},{"size":2982,"mtime":1688310887107,"results":"39","hashOfConfig":"31"},{"size":1619,"mtime":1688328268039,"results":"40","hashOfConfig":"31"},{"size":1591,"mtime":1688323782219,"results":"41","hashOfConfig":"31"},{"size":917,"mtime":1688313821463,"results":"42","hashOfConfig":"31"},{"size":1088,"mtime":1688385258988,"results":"43","hashOfConfig":"31"},{"size":533,"mtime":1688386499859,"results":"44","hashOfConfig":"31"},{"size":1754,"mtime":1688389884729,"results":"45","hashOfConfig":"31"},{"size":1338,"mtime":1688386632625,"results":"46","hashOfConfig":"31"},{"size":1399,"mtime":1688297969656,"results":"47","hashOfConfig":"31"},{"size":1526,"mtime":1688319484786,"results":"48","hashOfConfig":"31"},{"size":6412,"mtime":1688313287627,"results":"49","hashOfConfig":"31"},{"size":885,"mtime":1688386494018,"results":"50","hashOfConfig":"31"},{"size":348,"mtime":1688311727020,"results":"51","hashOfConfig":"31"},{"size":539,"mtime":1688310540773,"results":"52","hashOfConfig":"31"},{"size":291,"mtime":1688308858006,"results":"53","hashOfConfig":"31"},{"size":3795,"mtime":1688329546970,"results":"54","hashOfConfig":"31"},{"size":1971,"mtime":1688316508896,"results":"55","hashOfConfig":"31"},{"size":990,"mtime":1688311727035,"results":"56","hashOfConfig":"31"},{"size":2748,"mtime":1688327807059,"results":"57","hashOfConfig":"31"},{"size":2013,"mtime":1688331197155,"results":"58","hashOfConfig":"31"},{"size":1320,"mtime":1688331256654,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"8g6km8",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\App.tsx",[],["127","128"],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\AppRouter.tsx",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\NavBar.tsx",["129","130"],"import React from 'react';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ADMIN_ROUTE, BASKET_ROUTE, LOGIN_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useAppDispatch, useAppSelector} from \"../hooks/redux\";\r\nimport {logout} from \"../store/reducers/user/userSlice\";\r\n\r\nconst NavBar = () => {\r\n    const dispatch = useAppDispatch()\r\n    const {isAuth, user} = useAppSelector(state => state.userSlice)\r\n    const history = useHistory()\r\n\r\n    const logOut = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header style={{\r\n            height: 100,\r\n            backgroundColor: 'black',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            paddingLeft: 12,\r\n            paddingRight: 12\r\n        }}>\r\n            <div style={{\r\n                flex: 1,\r\n                display: 'flex',\r\n                justifyContent: 'space-between'\r\n            }}>\r\n                <NavLink style={{color: 'white'}} to={SHOP_ROUTE}>\r\n                    <h1>DigitalTown</h1>\r\n                </NavLink>\r\n                {isAuth ?\r\n                    <Nav className=\"ml-auto\" style={{color: 'white'}}>\r\n                        {\r\n                            user.role === 'ADMIN'\r\n                                ? <Button\r\n                                    variant={\"outline-success\"}\r\n                                    onClick={() => history.push(ADMIN_ROUTE)}\r\n                                >\r\n                                    Админ панель\r\n                                </Button>\r\n                                : <Button\r\n                                    variant={\"outline-success\"}\r\n                                    onClick={() => history.push(BASKET_ROUTE)}\r\n                                >\r\n                                    Корзина\r\n                                </Button>\r\n                        }\r\n\r\n                        <Button\r\n                            variant={\"outline-danger\"}\r\n                            onClick={logOut}\r\n                            className=\"ml-2 border-12\"\r\n                        >\r\n                            Выйти\r\n                        </Button>\r\n                    </Nav>\r\n                    :\r\n                    <Nav className=\"ml-auto\" style={{color: 'white'}}>\r\n                        <Button variant={\"outline-light\"} onClick={() => history.push(LOGIN_ROUTE)}>Авторизация</Button>\r\n                    </Nav>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\http\\userAPI.ts",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\routes.ts",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\http\\index.ts",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\utils\\consts.ts",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\pages\\DevicePage.tsx",["131","132","133","134","135"],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\pages\\Auth.tsx",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\pages\\Shop.tsx",["136","137","138"],"import React, {useEffect} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport BrandBar from \"../components/BrandBar\";\r\nimport DeviceList from \"../components/DeviceList\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport Pages from \"../components/Pages\";\r\nimport {useAppDispatch, useAppSelector} from \"../hooks/redux\";\r\nimport {getBrands, getDevices, getTypes} from \"../store/reducers/device/deviceActions\";\r\n\r\nconst Shop = () => {\r\n    const dispatch = useAppDispatch()\r\n    const {selectedBrand, selectedType, page} = useAppSelector(state => state.deviceSlice)\r\n\r\n    useEffect(() => {\r\n        dispatch(getTypes())\r\n        dispatch(getBrands())\r\n        dispatch(getDevices({\r\n            //@ts-ignore\r\n            typeId: null,\r\n            //@ts-ignore\r\n            brandId: null,\r\n            page: 1,\r\n            limit: 2\r\n        }))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(getDevices({\r\n            limit: 5,\r\n            typeId: selectedType.id,\r\n            brandId: selectedBrand.id,\r\n            page\r\n        }))\r\n    }, [page, selectedType, selectedBrand])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar/>\r\n                    <DeviceList/>\r\n                    <Pages/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Shop;\r\n","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\pages\\Admin.tsx",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\Pages.tsx",["139","140"],"import React from 'react';\r\nimport {Pagination} from \"react-bootstrap\";\r\nimport {useAppDispatch, useAppSelector} from \"../hooks/redux\";\r\nimport {setPage} from \"../store/reducers/device/deviceSlice\";\r\n\r\nconst Pages = () => {\r\n    const dispatch = useAppDispatch()\r\n    const {limit, totalCount, page} = useAppSelector(state => state.deviceSlice)\r\n    const pageCount = Math.ceil(totalCount / limit)\r\n    const pages = []\r\n\r\n    for (let i = 0; i < pageCount; i++) {\r\n        pages.push(i + 1)\r\n    }\r\n\r\n    return (\r\n        <Pagination className=\"mt-3\">\r\n            {pages.map(page =>\r\n                <Pagination.Item\r\n                    key={page}\r\n                    active={page === page}\r\n                    onClick={() => dispatch(setPage(page))}\r\n                >\r\n                    {page}\r\n                </Pagination.Item>\r\n            )}\r\n        </Pagination>\r\n    );\r\n};\r\n\r\nexport default Pages;\r\n","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\BrandBar.tsx",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\DeviceList.tsx",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\http\\deviceAPI.ts",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\TypeBar.tsx",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\modals\\CreateType.tsx",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\modals\\CreateBrand.tsx",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\modals\\CreateDevice.tsx",["141"],"import React, {useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {useAppDispatch, useAppSelector} from \"../../hooks/redux\";\r\nimport {addDevice, getBrands, getTypes} from \"../../store/reducers/device/deviceActions\";\r\nimport {setSelectedBrand, setSelectedType} from \"../../store/reducers/device/deviceSlice\";\r\n\r\nconst CreateDevice = ({show, onHide}: {show: boolean, onHide: () => void}) => {\r\n    const dispatch = useAppDispatch()\r\n    const {types, brands, selectedType, selectedBrand} = useAppSelector(state => state.deviceSlice)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [file, setFile] = useState('')\r\n    const [info, setInfo] = useState<any>([])\r\n\r\n    useEffect(() => {\r\n        dispatch(getTypes())\r\n        dispatch(getBrands())\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number: number) => {\r\n        setInfo(info.filter((i: any) => i.number !== number))\r\n    }\r\n    const changeInfo = (key: string, value: string, number: number) => {\r\n        setInfo(info.map((i: any) => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const selectFile = (e: any) => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', `${price}`)\r\n        formData.append('img', file)\r\n        formData.append('brandId', selectedBrand.id)\r\n        formData.append('typeId', selectedType.id)\r\n        formData.append('info', JSON.stringify(info))\r\n        dispatch(addDevice(formData))\r\n        onHide()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => dispatch(setSelectedType(type))}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {brands.map(brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => dispatch(setSelectedBrand(brand))}\r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название устройства\"\r\n                    />\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость устройства\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-dark\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Введите название свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                                    placeholder=\"Введите описание свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={handleAdd}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateDevice;\r\n","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\DeviceItem.tsx",["142","143","144","145","146"],"import React, {FC, forwardRef} from 'react';\r\nimport {Card, Col} from \"react-bootstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {DEVICE_ROUTE} from \"../utils/consts\";\r\nimport {Device} from \"../store/reducers/device/deviceSlice\";\r\n\r\n\r\ninterface ItemProps {\r\n    device: Device\r\n}\r\n\r\nconst DeviceItem: FC<ItemProps> = ({device}) => {\r\n    const history = useHistory()\r\n    return (\r\n        <Col\r\n            md={3}\r\n            className={\"mt-3\"}\r\n            onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}\r\n        >\r\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\r\n                <Image width={150} height={150} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                <div>{device.name}</div>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\index.tsx",["147"],"import React, {createContext} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport {setupStore} from \"./store/store\";\r\n\r\n\r\nconst store = setupStore()\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\store\\store.ts",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\hooks\\redux.ts",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\store\\reducers\\device\\deviceSlice.ts",["148","149"],"import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {getBrands, getDevices, getFromCart, getOneDevice, getTypes, removeFromCart} from \"./deviceActions\";\r\n\r\n\r\nexport interface Device {\r\n    id: number\r\n    name: string\r\n    price: number\r\n    rating: number\r\n    img: string\r\n    createdAt: string\r\n    updatedAt: string\r\n    typeId: number\r\n    brandId: number\r\n    info: any[]\r\n}\r\n\r\nexport interface Brand {\r\n    id: number\r\n    name: string\r\n    createdAt: string\r\n    updatedAt: string\r\n}\r\n\r\nexport interface Type {\r\n    id: number\r\n    name: string\r\n    createdAt: string\r\n    updatedAt: string\r\n}\r\n\r\ninterface IDeviceState {\r\n    isLoading: boolean\r\n    types: Type[]\r\n    brands: Brand[]\r\n    devices: Device[]\r\n    cart: Device[]\r\n    currentDevice: Device\r\n    selectedType: any\r\n    selectedBrand: any\r\n    page: number\r\n    totalCount: number\r\n    limit: number\r\n}\r\n\r\nconst initialState: IDeviceState = {\r\n    isLoading: false,\r\n    types: [],\r\n    brands: [],\r\n    devices: [],\r\n    cart: [],\r\n    currentDevice: {\r\n        id: 0,\r\n        name: '',\r\n        price: 0,\r\n        rating: 0,\r\n        img: '',\r\n        createdAt: '',\r\n        updatedAt: '',\r\n        typeId: 0,\r\n        brandId: 0,\r\n        info: []\r\n    },\r\n    selectedType: {},\r\n    selectedBrand: {},\r\n    page: 1,\r\n    totalCount: 0,\r\n    limit: 3\r\n}\r\n\r\nexport const deviceSlice = createSlice({\r\n    name: 'device',\r\n    initialState,\r\n    reducers: {\r\n        setPage(state, {payload}: PayloadAction<number>) {\r\n            state.page = payload\r\n        },\r\n        setSelectedBrand(state, {payload}: PayloadAction<Type>) {\r\n            state.page = 1\r\n            state.selectedBrand = payload\r\n        },\r\n        setSelectedType(state, {payload}: PayloadAction<Brand>) {\r\n            state.page = 1\r\n            state.selectedType = payload\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getDevices.pending.type]: (state) => {\r\n            state.isLoading = true\r\n        },\r\n        [getDevices.fulfilled.type]: (state, {payload}: PayloadAction<{count: number, rows: Device[]}>) => {\r\n            state.isLoading = false\r\n            state.devices = payload.rows\r\n            state.totalCount = payload.count\r\n        },\r\n        [getBrands.pending.type]: (state) => {\r\n            state.isLoading = true\r\n        },\r\n        [getBrands.fulfilled.type]: (state, {payload}: PayloadAction<Brand[]>) => {\r\n            state.isLoading = false\r\n            state.brands = payload\r\n        },\r\n        [getTypes.pending.type]: (state) => {\r\n            state.isLoading = true\r\n        },\r\n        [getTypes.fulfilled.type]: (state, {payload}: PayloadAction<Type[]>) => {\r\n            state.isLoading = false\r\n            state.types = payload\r\n        },\r\n        [getOneDevice.pending.type]: (state) => {\r\n            state.isLoading = true\r\n        },\r\n        [getOneDevice.fulfilled.type]: (state, {payload}: PayloadAction<Device>) => {\r\n            state.isLoading = false\r\n            state.currentDevice = payload\r\n        },\r\n        // [getFromCart.pending.type]: (state) => {\r\n        //     state.isLoading = true\r\n        // },\r\n        // [getFromCart.fulfilled.type]: (state, {payload}: PayloadAction<Device[]>) => {\r\n        //     state.cart = payload\r\n        //     state.isLoading = false\r\n        // },\r\n        // [removeFromCart.pending.type]: (state) => {\r\n        //     state.isLoading = true\r\n        // },\r\n        // [removeFromCart.fulfilled.type]: (state, {payload}: PayloadAction<{id: number}>) => {\r\n        //     state.isLoading = false\r\n        //     state.cart = state.cart.filter(item => item.id !== payload.id)\r\n        // }\r\n    }\r\n})\r\n\r\nexport const {setPage, setSelectedBrand, setSelectedType} = deviceSlice.actions\r\nexport default deviceSlice.reducer\r\n","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\store\\reducers\\user\\userSlice.ts",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\store\\reducers\\user\\userActions.ts",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\store\\reducers\\device\\deviceActions.ts",[],"C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\pages\\Cart.tsx",["150","151"],"import React, {useEffect, useState} from 'react';\r\nimport {Container} from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {useAppDispatch, useAppSelector} from \"../hooks/redux\";\r\nimport {getFromCart} from \"../store/reducers/device/deviceActions\";\r\nimport CartItem from \"../components/CartItem\";\r\nimport {Device} from \"../store/reducers/device/deviceSlice\";\r\nimport {$authHost} from \"../http\";\r\n\r\nconst Cart = () => {\r\n    const dispatch = useAppDispatch()\r\n    // const {cart} = useAppSelector(state => state.deviceSlice)\r\n    const [cart, setCart] = useState<Device[]>([])\r\n\r\n    useEffect(() => {\r\n        $authHost.get('api/basket')\r\n            .then(({data}) => setCart(data))\r\n        // dispatch(getFromCart())\r\n    }, [dispatch])\r\n\r\n    const handleDelete = (id: number) => {\r\n        $authHost.delete(`api/basket/${id}`)\r\n            .then(() => setCart(prev => prev.filter(item => item.id !== id)))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={9}>\r\n                    {/*<h1>lol</h1>*/}\r\n                    <Row className=\"d-flex\">\r\n                        {\r\n                            cart.length !== 0\r\n                                ? <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                                    <h1>Корзина</h1>\r\n                                    {cart.map(device =>\r\n                                        <CartItem\r\n                                            handleDelete={handleDelete}\r\n                                            key={device.id}\r\n                                            device={device}\r\n                                        />\r\n                                    )}</div>\r\n                                : <h1>Корзина пуста</h1>\r\n                        }\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\mm\\WebstormProjects\\kursach\\online-store-full-course\\client\\src\\components\\CartItem.tsx",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"156","severity":1,"message":"160","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":17},{"ruleId":"156","severity":1,"message":"161","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":12},{"ruleId":"156","severity":1,"message":"162","line":16,"column":18,"nodeType":"158","messageId":"159","endLine":16,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":28,"column":8,"nodeType":"165","endLine":28,"endColumn":10,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":39,"column":8,"nodeType":"165","endLine":39,"endColumn":26,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":62,"column":21,"nodeType":"171","endLine":68,"endColumn":23},{"ruleId":"156","severity":1,"message":"172","line":8,"column":9,"nodeType":"158","messageId":"159","endLine":8,"endColumn":17},{"ruleId":"163","severity":1,"message":"173","line":28,"column":8,"nodeType":"165","endLine":28,"endColumn":10,"suggestions":"174"},{"ruleId":"163","severity":1,"message":"173","line":37,"column":8,"nodeType":"165","endLine":37,"endColumn":43,"suggestions":"175"},{"ruleId":"156","severity":1,"message":"176","line":8,"column":31,"nodeType":"158","messageId":"159","endLine":8,"endColumn":35},{"ruleId":"177","severity":1,"message":"178","line":21,"column":29,"nodeType":"179","messageId":"180","endLine":21,"endColumn":42},{"ruleId":"163","severity":1,"message":"173","line":19,"column":8,"nodeType":"165","endLine":19,"endColumn":10,"suggestions":"181"},{"ruleId":"156","severity":1,"message":"182","line":2,"column":9,"nodeType":"158","messageId":"159","endLine":2,"endColumn":13},{"ruleId":"156","severity":1,"message":"183","line":2,"column":15,"nodeType":"158","messageId":"159","endLine":2,"endColumn":18},{"ruleId":"156","severity":1,"message":"184","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":13},{"ruleId":"156","severity":1,"message":"185","line":5,"column":9,"nodeType":"158","messageId":"159","endLine":5,"endColumn":21},{"ruleId":"156","severity":1,"message":"186","line":15,"column":11,"nodeType":"158","messageId":"159","endLine":15,"endColumn":18},{"ruleId":"156","severity":1,"message":"187","line":1,"column":16,"nodeType":"158","messageId":"159","endLine":1,"endColumn":29},{"ruleId":"156","severity":1,"message":"188","line":2,"column":32,"nodeType":"158","messageId":"159","endLine":2,"endColumn":43},{"ruleId":"156","severity":1,"message":"189","line":2,"column":69,"nodeType":"158","messageId":"159","endLine":2,"endColumn":83},{"ruleId":"156","severity":1,"message":"190","line":5,"column":25,"nodeType":"158","messageId":"159","endLine":5,"endColumn":39},{"ruleId":"156","severity":1,"message":"188","line":6,"column":9,"nodeType":"158","messageId":"159","endLine":6,"endColumn":20},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"@typescript-eslint/no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Form' is defined but never used.","'setCart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["193"],"React Hook useEffect has a missing dependency: 'fetchRating'. Either include it or remove the dependency array.",["194"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'observer' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["195"],["196"],"'page' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf",["197"],"'Card' is defined but never used.","'Col' is defined but never used.","'Image' is defined but never used.","'DEVICE_ROUTE' is defined but never used.","'history' is assigned a value but never used.","'createContext' is defined but never used.","'getFromCart' is defined but never used.","'removeFromCart' is defined but never used.","'useAppSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"202","fix":"206"},"Update the dependencies array to be: [dispatch, id]",{"range":"207","text":"208"},"Update the dependencies array to be: [currentDevice.id, fetchRating]",{"range":"209","text":"210"},"Update the dependencies array to be: [dispatch]",{"range":"211","text":"212"},"Update the dependencies array to be: [page, selectedType, selectedBrand, dispatch]",{"range":"213","text":"214"},{"range":"215","text":"212"},[1102,1104],"[dispatch, id]",[1355,1373],"[currentDevice.id, fetchRating]",[992,994],"[dispatch]",[1192,1227],"[page, selectedType, selectedBrand, dispatch]",[902,904]]